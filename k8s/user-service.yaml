apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-service-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-db
  labels:
    app: user-service-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service-db
  template:
    metadata:
      labels:
        app: user-service-db
    spec:
      containers:
      - name: postgres
        image: postgres:17-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: USER_SERVICE_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: user-service-db-storage
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: user-service-db-storage
        persistentVolumeClaim:
          claimName: user-service-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-db
spec:
  selector:
    app: user-service-db
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: gcr.io/${PROJECT_ID}/user-service:${TAG}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_APPLICATION_NAME
          value: "user-service"
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_CONFIG_IMPORT
          value: "configserver:http://configserver:8060/"
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eurekaserver:8070/eureka/"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://user-service-db:5432/$(USER_SERVICE_DB_NAME)"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: POSTGRES_PASSWORD
        - name: USER_SERVICE_DB_NAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: USER_SERVICE_DB_NAME
        - name: OTEL_SERVICE_NAME
          value: "user-service"
        resources:
          limits:
            memory: "700Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP