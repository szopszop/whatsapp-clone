server:
  port: 8080

spring:
  application:
    name: user-service
  config:
    import: "optional:configserver:http://configserver:8060/"
  datasource:
    url: jdbc:postgresql://postgres:5432/${USER_SERVICE_DB_NAME:user_service}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    schemas: public
    clean-disabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI:http://auth-server:8090}



#Actuator
management:
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      probes:
        enabled: true
    metrics:
      access: read_only
    prometheus:
      access: read_only
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://eurekaserver:8070/eureka/

#Eureka dashboard
info:
  app:
    name: "user-service"
    description: "User service app"
    version: "1.0.0"

logging:
  level:
    tracz:
      userservice: ERROR
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

#OpenAPI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
